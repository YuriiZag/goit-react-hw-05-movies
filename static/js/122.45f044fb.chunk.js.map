{"version":3,"file":"static/js/122.45f044fb.chunk.js","mappings":"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","sources":["pages/movies/movies.styled.jsx","pages/movies/movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FilmList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n`;\n\nexport const FilmLinks = styled(Link)`\n  font-size: ${p => p.theme.fontSizes.s}px;\n`;\n\nexport const Form = styled.form`\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[6]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const InputField = styled.input`\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal}px 0 0\n    ${p => p.theme.radii.normal}px;\n  border: ${p => p.theme.borders.normal};\n  outline: none;\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.red};\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: 0 ${p => p.theme.radii.normal}px \n    ${p => p.theme.radii.normal}px 0;\n  \n`;","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport fetchApi from 'utils/API';\nimport { Box } from 'utils/box';\nimport { FilmLinks, FilmList, Form, InputField, SubmitButton } from './movies.styled';\n\nconst Movies = () => {\n  const [queryName, setQuerryName] = useState('');\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const quoteFilmName = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    const filmName = searchParams.get('query') ?? '';\n    console.log(filmName);\n    if (filmName !== '' || filmName === undefined) {\n      const serchQuote = 'search/movie';\n      const searchQuery = `&query=${filmName.trim()}`;\n      fetchApi(serchQuote, searchQuery)\n        .then(({ data }) => setSearchedMovies(data.results))\n        .catch(erorr => erorr);\n    }\n  }, [searchParams]);\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n    updateQueryString(queryName);\n    const serchQuote = 'search/movie';\n    const searchQuery = `&query=${queryName.trim()}`;\n    fetchApi(serchQuote, searchQuery)\n      .then(({ data }) => setSearchedMovies(data.results))\n      .catch(erorr => erorr);\n    setQuerryName('');\n  };\n\n  const onInputChange = e => {\n    setQuerryName(e.currentTarget.value);\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n  return (\n    <Box as=\"section\" pt=\"30px\">\n      <Form onSubmit={onFormSubmit}>\n        <label htmlFor=\"movie-name\">\n          <InputField\n            type=\"text\"\n            name=\"movie-name\"\n            onChange={onInputChange}\n            value={queryName}\n          />\n        </label>\n        <SubmitButton type=\"submit\">search</SubmitButton>\n      </Form>\n      {quoteFilmName !== '' ? (\n        <FilmList>\n          {searchedMovies.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <FilmLinks to={`${id}`} state={{ from: location }}>\n                  {title}\n                </FilmLinks>\n              </li>\n            );\n          })}\n        </FilmList>\n      ) : (\n        <p>input to search</p>\n      )}\n    </Box>\n  );\n};\n\nexport default Movies"],"names":["FilmList","styled","p","theme","space","FilmLinks","Link","fontSizes","s","Form","InputField","radii","normal","borders","colors","red","SubmitButton","useState","queryName","setQuerryName","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","quoteFilmName","get","location","useLocation","useEffect","filmName","console","log","undefined","searchQuery","trim","fetchApi","then","data","results","catch","erorr","onFormSubmit","e","preventDefault","updateQueryString","query","as","pt","onSubmit","htmlFor","type","name","onChange","currentTarget","value","map","id","title","to","state","from"],"sourceRoot":""}